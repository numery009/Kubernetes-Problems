Create a pod called time-check in the dvl1987 namespace. This pod should run a container called time-check that uses the busybox image.
Create a config map called time-config with the data TIME_FREQ=10 in the same namespace.
The time-check container should run the command: while true; do date; sleep $TIME_FREQ;done and write the result to the location /opt/time/time-check.log.
The path /opt/time on the pod should mount a volume that lasts the lifetime of this pod.

----------------------------------------------------------------------------------------------------------------------------------------------------------


# create configMap
kubectl create configmap time-config --from-literal=TIME_FREQ=10 -n dvl1987

# create nameSpace
kubectl create namespace dvl1987


apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2021-04-13T20:30:41Z"
  labels:
    run: time-check
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:labels:
          .: {}
          f:run: {}
      f:spec:
        f:containers:
          k:{"name":"time-check"}:
            .: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:resources: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
        f:dnsPolicy: {}
        f:enableServiceLinks: {}
        f:restartPolicy: {}
        f:schedulerName: {}
        f:securityContext: {}
        f:terminationGracePeriodSeconds: {}
    manager: kubectl-run
    operation: Update
    time: "2021-04-13T20:30:41Z"
  name: time-check
  namespace: dvl1987
  resourceVersion: "3061"
  selfLink: /api/v1/namespaces/dvl1987/pods/time-check
  uid: 5efa9239-0af7-4361-a9d5-f7efd060ae42
spec:
  containers:
  - image: busybox
    imagePullPolicy: Always
    name: time-check
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    command: ["/bin/sh"]
    args: ["-c", "while true; do date; sleep $TIME_FREQ;done > /opt/time/time-check.log"]
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: default-token-pznmf
      readOnly: true
    - mountPath: /opt/time
      name: mypod
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: default-token-pznmf
    secret:
      defaultMode: 420
      secretName: default-token-pznmf
  - name: mypod
    emptyDir: {}
